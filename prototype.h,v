head	1.36;
access;
symbols;
locks
	root:1.36; strict;
comment	@ * @;


1.36
date	2015.08.29.10.56.01;	author root;	state Exp;
branches;
next	1.35;

1.35
date	2015.08.25.18.37.29;	author root;	state Exp;
branches;
next	1.34;

1.34
date	2015.08.25.18.21.08;	author root;	state Exp;
branches;
next	1.33;

1.33
date	2015.08.25.18.18.29;	author root;	state Exp;
branches;
next	1.32;

1.32
date	2015.08.25.18.15.57;	author root;	state Exp;
branches;
next	1.31;

1.31
date	2015.07.27.18.24.57;	author root;	state Exp;
branches;
next	1.30;

1.30
date	2015.07.22.07.10.51;	author root;	state Exp;
branches;
next	1.29;

1.29
date	2015.07.20.10.30.37;	author root;	state Exp;
branches;
next	1.28;

1.28
date	2015.07.20.10.13.54;	author root;	state Exp;
branches;
next	1.27;

1.27
date	2015.07.15.07.55.54;	author root;	state Exp;
branches;
next	1.26;

1.26
date	2015.07.13.07.15.45;	author root;	state Exp;
branches;
next	1.25;

1.25
date	2015.07.12.13.24.49;	author root;	state Exp;
branches;
next	1.24;

1.24
date	2015.07.12.13.08.47;	author root;	state Exp;
branches;
next	1.23;

1.23
date	2015.07.12.13.06.24;	author root;	state Exp;
branches;
next	1.22;

1.22
date	2015.07.12.12.58.14;	author root;	state Exp;
branches;
next	1.21;

1.21
date	2015.07.12.12.56.50;	author root;	state Exp;
branches;
next	1.20;

1.20
date	2015.07.12.12.54.33;	author root;	state Exp;
branches;
next	1.19;

1.19
date	2015.07.12.12.50.53;	author root;	state Exp;
branches;
next	1.18;

1.18
date	2015.07.12.12.47.30;	author root;	state Exp;
branches;
next	1.17;

1.17
date	2015.07.12.11.58.13;	author root;	state Exp;
branches;
next	1.16;

1.16
date	2015.07.12.11.53.03;	author root;	state Exp;
branches;
next	1.15;

1.15
date	2015.07.12.10.57.05;	author root;	state Exp;
branches;
next	1.14;

1.14
date	2015.07.12.10.49.40;	author root;	state Exp;
branches;
next	1.13;

1.13
date	2015.06.29.13.19.42;	author root;	state Exp;
branches;
next	1.12;

1.12
date	2015.06.29.11.29.18;	author root;	state Exp;
branches;
next	1.11;

1.11
date	2015.06.29.11.11.31;	author root;	state Exp;
branches;
next	1.10;

1.10
date	2015.06.27.12.10.41;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2015.06.27.11.52.50;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2015.06.27.11.50.58;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2015.06.27.11.28.21;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2015.06.27.11.25.33;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2015.06.27.08.11.30;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2015.06.26.15.23.09;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2015.06.26.11.15.24;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2015.06.26.11.11.08;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2015.06.26.09.43.17;	author root;	state Exp;
branches;
next	;


desc
@create a header file for prototype declaration
@


1.36
log
@*** empty log message ***
@
text
@extern int open_file();
int c_length(int);
int s_masterarray(char*,int);
extern int compress();
extern char* create_masterarray(int);
extern int decompress();
extern int main_menu();
extern int compress2(int , char* ,int);
extern int compress3(int , char* ,int);
extern int compress4(int , char* ,int);
extern int compress5(int , char* ,int);
extern int compress6(int , char* ,int);
extern int compress7(int , char* ,int);
extern int index_file(char, char* ,int);
extern int open_cfile();
extern int decompress2(int, char* ,int);
extern int decompress3(int, char* ,int);
extern int decompress4(int, char* ,int);
extern int decompress5(int, char* ,int);
extern int decompress6(int, char* ,int);
extern int decompress7(int, char* ,int);
extern void exit_file();
extern int operation(int);

@


1.35
log
@*** empty log message ***
@
text
@d23 1
@


1.34
log
@*** empty log message ***
@
text
@d22 1
a22 1
extern int exit_file();
@


1.33
log
@*** empty log message ***
@
text
@d22 1
a22 1
 int exit();
@


1.32
log
@*** empty log message ***
@
text
@d22 1
a22 1
extern int exit();
@


1.31
log
@*** empty log message ***
@
text
@d22 1
@


1.30
log
@*** empty log message ***
@
text
@d16 6
a21 6
extern int decompress2( char* ,int);
extern int decompress3( char* ,int);
extern int decompress4( char* ,int);
extern int decompress5( char* ,int);
extern int decompress6( char* ,int);
extern int decompress7( char* ,int);
@


1.29
log
@include proper prototype whatever are required.
@
text
@d16 6
a21 6
extern int decompress2(int , char* ,int);
extern int decompress3(int , char* ,int);
extern int decompress4(int , char* ,int);
extern int decompress5(int , char* ,int);
extern int decompress6(int , char* ,int);
extern int decompress7(int , char* ,int);
@


1.28
log
@include prototype here.
@
text
@d8 6
a13 6
extern int compress_file2(int , char* ,int);
extern int compress_file3(int , char* ,int);
extern int compress_file4(int , char* ,int);
extern int compress_file5(int , char* ,int);
extern int compress_file6(int , char* ,int);
extern int compress_file7(int , char* ,int);
d16 6
a21 6
extern int decompress_file2(int , char* ,int);
extern int decompress_file3(int , char* ,int);
extern int decompress_file4(int , char* ,int);
extern int decompress_file5(int , char* ,int);
extern int decompress_file6(int , char* ,int);
extern int decompress_file7(int , char* ,int);
@


1.27
log
@includ3 the prototype od decompression
@
text
@d16 6
@


1.26
log
@declare prototype of include file.
@
text
@a15 1
extern char* u_masterarray(int);
@


1.25
log
@*** empty log message ***
@
text
@d15 2
@


1.24
log
@*** empty log message ***
@
text
@d4 1
a5 1
extern int compress();
@


1.23
log
@*** empty log message ***
@
text
@d1 1
a1 1
int open_file();
d4 1
a4 1
char* create_masterarray(int);
a14 2
extern int open_file();
extern char* create_masterarray(int);
@


1.22
log
@*** empty log message ***
@
text
@d15 1
a15 1
extern int open_file(void);
@


1.21
log
@*** empty log message ***
@
text
@d16 1
a16 1
extern char create_masterarray(int);
@


1.20
log
@*** empty log message ***
@
text
@d16 1
a16 1
extern int create_masterarray(int);
@


1.19
log
@*** empty log message ***
@
text
@d15 2
a16 2
extern int open_file(char, char* ,int);
extern int create_masterarray(char, char* ,int);
@


1.18
log
@include prototype for open file .
@
text
@d8 9
a16 9
extern compress_file2(int , char* ,int);
extern compress_file3(int , char* ,int);
extern compress_file4(int , char* ,int);
extern compress_file5(int , char* ,int);
extern compress_file6(int , char* ,int);
extern compress_file7(int , char* ,int);
extern index_file(char, char* ,int);
extern open_file(char, char* ,int);
extern create_masterarray(char, char* ,int);
@


1.17
log
@include prototype of decompress fun()
@
text
@d15 2
@


1.16
log
@declare the prototype of main fun().
@
text
@d6 1
@


1.15
log
@change the prototype of compress fun()
@
text
@d6 1
@


1.14
log
@change the prototype declaration of compress fun().
@
text
@d5 1
a5 1
extern compress();
@


1.13
log
@*** empty log message ***
@
text
@d5 1
a5 1
extern compress(int ,char*);
@


1.12
log
@*** empty log message ***
@
text
@d5 1
a5 1
extern  compress(int ,char*);
@


1.11
log
@prototupes to prototype
@
text
@d12 1
a12 1
extern index_file(int , char* ,int);
@


1.10
log
@*** empty log message ***
@
text
@d12 1
@


1.9
log
@*** empty log message ***
@
text
@d1 6
a6 6
//int open_file();
//int c_length(int);
//int s_masterarray(char*,int);
//char* create_masterarray(int);
//extern  compress(int ,char*);
/*extern compress_file2(int , char* ,int);
d12 1
a12 1
*/
@


1.8
log
@*** empty log message ***
@
text
@d1 6
a6 6
int open_file();
int c_length(int);
int s_masterarray(char*,int);
char* create_masterarray(int);
extern  compress(int ,char*);
extern compress_file2(int , char* ,int);
d12 1
@


1.7
log
@*** empty log message ***
@
text
@d1 11
a11 11
//int open_file();
//int c_length(int);
//int s_masterarray(char*,int);
//char* create_masterarray(int);
//extern  compress(int ,char*);
//extern compress_file2(int , char* ,int);
//extern compress_file3(int , char* ,int);
//extern compress_file4(int , char* ,int);
//extern compress_file5(int , char* ,int);
//extern compress_file6(int , char* ,int);
//extern compress_file7(int , char* ,int);
@


1.6
log
@*** empty log message ***
@
text
@d1 4
a4 4
int open_file();
int c_length(int);
int s_masterarray(char*,int);
char* create_masterarray(int);
d8 4
a11 4
extern compress_file4(int , char* ,int);
extern compress_file5(int , char* ,int);
extern compress_file6(int , char* ,int);
extern compress_file7(int , char* ,int);
@


1.5
log
@change name.
@
text
@d5 3
a7 3
extern  compress(int ,char*);
extern compress_file2(int , char* ,int);
extern compress_file3(int , char* ,int);
@


1.4
log
@declare the prototype for 7 other compress file.
@
text
@a5 1
extern compress_file1(int , char* ,int);
d11 1
@


1.3
log
@argument type has changed
@
text
@d6 6
@


1.2
log
@passed the return type as argument
@
text
@d5 1
a5 1
extern int compress(int ,int);
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
extern int compress();
@
